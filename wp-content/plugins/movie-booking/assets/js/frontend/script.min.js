!function(_){"use strict";var f={init:function(){this.mb_popup_showtime(),this.cart_seat(),this.cart_total(),this.cart_discount(),this.cart_price_incl_tax(),this.cart_next(),this.countdown_checkout(),this.mb_trailer_video_popup(),this.mb_trailer_video_popup_for_slick()},mb_popup_showtime:function(){function i(a){var e;null!=a&&(e=a.closest("#mb_booking_popup"),a.on("click",function(t){t.preventDefault(),a.closest("#mb_booking_popup").hide(),a.closest("#mb_booking_popup").find(".mb-bp-content").hide()}),_(window).click(function(t){e.is(t.target)&&(a.closest("#mb_booking_popup").hide(),a.closest("#mb_booking_popup").find(".mb-bp-content").hide())}))}function c(t){null!=t&&t.on("click",function(t){t.preventDefault(),_(this).closest(".toggle-tabs").find("li").removeClass("current"),_(this).closest("li").addClass("current");t=_(this).closest("li").index();_(this).closest(".mb-showtimes").children("dl.collateral-tabs").children("dt.tab").removeClass("current"),_(this).closest(".mb-showtimes").children("dl.collateral-tabs").children("dd.tab-container").removeClass("current"),_(this).closest(".mb-showtimes").children("dl.collateral-tabs").children("dt.tab").eq(t).addClass("current"),_(this).closest(".mb-showtimes").children("dl.collateral-tabs").children("dd.tab-container").eq(t).addClass("current")})}function r(t){null!=t&&t.on("click",function(t){t.preventDefault(),_(this).closest(".toggle-tabs").find("li").removeClass("current"),_(this).closest("li").addClass("current");t=_(this).index();_(this).closest(".mb-room-types").children("dl.collateral-tabs").children("dt.tab").removeClass("current"),_(this).closest(".mb-room-types").children("dl.collateral-tabs").children("dd.tab-container").removeClass("current"),_(this).closest(".mb-room-types").children("dl.collateral-tabs").children("dt.tab").eq(t).addClass("current"),_(this).closest(".mb-room-types").children("dl.collateral-tabs").children("dd.tab-container").eq(t).addClass("current")})}_(".btn-booking").on("click",function(t){t.preventDefault();var t=_(this).data("movie-id"),a=_(".mb_booking_popup .mb-bp-container .mb-close");a.hide(),_(".mb_booking_popup").show(),_(".mb_booking_popup .mb-spinner").show(),_.post(ajax_object.ajax_url,{action:"mb_popup_showtime",data:{ajax_nonce:ajax_object.ajax_nonce,movie_id:t}},function(t){_(".mb_booking_popup .mb-bp-container .mb-bp-content").show(),_(".mb_booking_popup .mb-spinner").hide(),_(".mb_booking_popup .mb-bp-container .mb-bp-content").html("").append(t),a.css("display","flex"),i(a);t=_(".mb_booking_popup .mb-bp-container .mb-bp-content .mb-date-tabs .day");null!=(t=t)&&t.on("click",function(t){t.preventDefault();var a=_(this).data("date"),t=_(this).closest("#mb_booking_popup").find('input[name="movie_id"]').val();_(this).closest(".mb-date-tabs").find("li").removeClass("current"),_(this).closest("li").addClass("current"),_(".mb_booking_popup .mb-spinner").show(),_(this).closest("#mb_booking_popup").find(".mb-bp-content .mb-showtimes").html(""),_(this).closest("#mb_booking_popup").find(".mb-bp-content dt.tab").removeClass("current"),_(this).closest("#mb_booking_popup").find(".mb-bp-content dd.tab-container").removeClass("current");var e=_(this).closest("#mb_booking_popup").find('.mb-bp-content dt.tab[data-date="'+a+'"]').addClass("current").next("dd.tab-container").addClass("current");_.post(ajax_object.ajax_url,{action:"mb_get_showtimes",data:{ajax_nonce:ajax_object.ajax_nonce,movie_id:t,date:a}},function(t){_(".mb_booking_popup .mb-spinner").hide(),e.html("").append(t),i(_(".mb_booking_popup .mb-bp-container .mb-close")),c(_(".mb_booking_popup .mb-bp-container .mb-bp-content .collateral-tabs .mb-city-name")),r(_(".mb_booking_popup .mb-bp-container .mb-bp-content .collateral-tabs .mb-room-type-name"))})}),c(_(".mb_booking_popup .mb-bp-container .mb-bp-content .collateral-tabs .mb-city-name")),r(_(".mb_booking_popup .mb-bp-container .mb-bp-content .collateral-tabs .mb-room-type-name"))})})},cart_seat:function(){const c={KEY:"",contents:[],init:function(){c.get_key_cart();var t=localStorage.getItem(c.KEY);t?c.contents=JSON.parse(t):c.add_store()},add_store:function(){var t=JSON.stringify(c.contents);localStorage.setItem(c.KEY,t)},map_add_item:function(a,t){t={id:a,price:t};c.check_item(a)?c.contents=c.contents.map(function(t){if(t.id===a)return t}):c.contents.push(t),c.add_store()},remove:function(a){c.contents=c.contents.filter(function(t){if(t.id!==a)return!0}),c.add_store()},get_key_cart:function(){var t=_('.cart_detail input[name="cart-data"]').data("sid"),a=_('.cart_detail input[name="cart-data"]').data("rid");t&&a&&(c.KEY=t+"_"+a,Cookies.set("showtime_id",t),Cookies.set("room_id",a))},check_item:function(a){var t=c.contents.filter(function(t){return t.id==a});return!(!t||!t[0])&&t[0]},seat_map:function(){var r=_(document).find('.cart_detail input[name="data-seat"]').data("seat"),o=_(document).find('.cart_detail input[name="data-seat-booked"]').data("seat-booked"),n=[],d=[],s=_('.cart_detail input[name="cart-data"]').data("sid"),l=_('.cart_detail input[name="cart-data"]').data("rid");function p(t){var a=_('.cart_detail input[name="cart-data"]').data("tax-fee"),e=_('.cart_detail input[name="cart-data"]').data("tax-type"),a=a||0,i=_('.cart_detail input[name="cart-data"]').data("ticket-fee"),c=_('.cart_detail input[name="cart-data"]').data("ticket-fee-type"),i=i||0;_(".cart_detail .cart-sidebar .wp-content-item .info-sub-price").html(f.cart_total(t));var r=_(".cart_detail .wp-seat-info").children("span").length;_(".cart_detail .cart-sidebar .wp-content-item .item-info.item-info-map").attr("data-qty",r),_(".cart_detail .cart-sidebar .wp-content-item .item-info.item-info-map").attr("data-price",t);var o=JSON.parse(localStorage.getItem(s+"_"+l));let n=0;a&&("percent"===e&&(n=parseFloat(a)*t/100),"amount"===e&&(n=parseFloat(a))),_(".cart_detail .cart-sidebar .tax-number").empty().html("+"+f.cart_total(n)),_(".cart_detail .cart-sidebar .tax-number").attr("data-tax",n);let d=0;Array.isArray(o)&&o.length&&i&&("percent"===c&&(d=parseFloat(i)*t/100),"amount"===c&&(d=parseFloat(i))),d*=r,_(".cart_detail .cart-sidebar .ticket-fee-number").empty().html("+"+f.cart_total(d)),_(".cart_detail .cart-sidebar .ticket-fee-number").attr("data-ticket-fee",d),_(".cart_detail .cart-sidebar .total-price").html(f.cart_total(t+n+d)),Array.isArray(o)&&o.length?(_(".cart_detail .cart-sidebar .placeholder").hide(),_(".cart_detail .cart-sidebar .cart-error").hide(),_(".cart_detail .cart-sidebar .wp-content-item").show(),_(".cart_detail .cart-sidebar .item-info.item-header").css("display","flex"),n?_(".cart_detail .cart-sidebar .total-tax").css("display","flex"):_(".cart_detail .cart-sidebar .total-tax").hide(),d?_(".cart_detail .cart-sidebar .ticket-fee").css("display","flex"):_(".cart_detail .cart-sidebar .ticket-fee").hide(),_(".cart_detail .cart-sidebar .total-cart-info").attr("data-total",t+n+d),_(".cart_detail .cart-sidebar .cart-checkout").removeClass("mb-disable")):(_(".cart-info .placeholder").show(),_(".cart_detail .cart-sidebar .wp-content-item").hide(),_(".cart_detail .cart-sidebar .item-info.item-header").hide(),_(".cart_detail .cart-sidebar .total-tax").hide(),_(".cart_detail .cart-sidebar .ticket-fee").hide(),_(".cart_detail .cart-sidebar .total-cart-info").attr("data-total",0),_(".cart_detail .cart-sidebar .total-price").html(f.cart_total(0)),_(".cart_detail .cart-sidebar .cart-checkout").addClass("mb-disable"))}"undefined"!=typeof ImageMapPro&&(ImageMapPro.subscribe(t=>{"mapInit"===t.type&&function(){ImageMapPro.isMobile()||_(document).find(".cart_detail .imp-fullscreen-button").hide();let t=0,a=JSON.parse(localStorage.getItem(s+"_"+l));_(".cart_detail .cart-sidebar .wp-content-item").empty().html('<div class="item-info item-info-map"><div class="info-type-ticket"><div class="wp-seat-info"></div></div><div class="info-sub-price"></div></div>'),Array.isArray(a)&&a.length?(_(".cart_detail .cart-sidebar .wp-content-item").css("display","block"),_(".cart_detail .cart-sidebar .item-info.item-header").css("display","flex"),_(".cart_detail .cart-sidebar .total-tax").css("display","flex"),_(".cart_detail .cart-sidebar .cart-info .placeholder").css("display","none")):(_(".cart_detail .cart-sidebar .wp-content-item").css("display","none"),_(".cart_detail .cart-sidebar .item-info.item-header").css("display","none"),_(".cart_detail .cart-sidebar .total-tax").css("display","none"),_(".cart_detail .cart-sidebar .ticket-fee").css("display","none"),_(".cart_detail .cart-sidebar .cart-info .placeholder").css("display","block"));for(var e=o.length-1;0<=e;e--)for(var i=r.length-1;0<=i;i--)"-1"!=r[i].id.indexOf(o[e])&&_(document).find('.imp-objects .imp-object[data-title="'+o[e]+'"]').addClass("booked");for(i=0;i<a.length;i++){-1==_.inArray(a[i].id,n)&&(t+=f.cart_price_incl_tax(parseFloat(a[i].price)),n.push(a[i].id),d.push(a[i].price)),_(document).find('.imp-objects .imp-object[data-title="'+a[i].id+'"]').attr("selected","selected").addClass("selected");var c='<span class="seat-'+i+'">'+a[i].id+"</span>";_(".cart_detail .cart-sidebar .wp-content-item .wp-seat-info").append(c)}p(t)}(t.payload.map)}),ImageMapPro.subscribe(t=>{var i;"objectClick"===t.type&&(t.payload.map,i=t.payload.object,-1===_.inArray(i,o)&&(_(document).find('.imp-objects .imp-object[data-title="'+i+'"]').off("click").one("click touchstart",function(){var t=_(this);let a=0;if(t.hasClass("selected")){t.removeClass("selected").removeAttr("selected"),_(document).find('.imp-objects .imp-object[data-title="'+i+'"]').removeClass("selected").removeAttr("selected");for(let t=n.length-1;0<=t;t--)i==n[t]&&(n.splice(t,1),d.splice(t,1),_(document).find(".cart_detail .wp-seat-info span:nth-child("+(t+1)+")").remove(),c.remove(i));for(let t=d.length-1;0<=t;t--)a+=f.cart_price_incl_tax(parseFloat(d[t]))}else{_(".cart_detail .wp-seat-info").children("span").length,t.attr("selected","selected").addClass("selected"),_(document).find('.imp-objects .imp-object[data-title="'+i+'"]').attr("selected","selected").addClass("selected");for(let a=0;a<r.length;a++){var e='<span class="seat-'+a+'">'+i+"</span>";let t;t=r[a].id.split(","),t=t.filter(function(t){return null!=t&&""!=t&&" "!=t}),t=t.map(function(t){return t.trim()}),"-1"!=t.indexOf(i)&&(n.push(i),d.push(r[a].price),_(".cart_detail .cart-sidebar .wp-seat-info").append(e),c.map_add_item(i,r[a].price))}for(let t=d.length-1;0<=t;t--)a+=f.cart_price_incl_tax(parseFloat(d[t]))}p(a)}),_(".cart_detail .cart-sidebar .cart-discount .form-discount i").click()))}))}};c.init(),c.seat_map()},cart_total:function(t){var a=_('.cart_detail input[name="cart-data"]').data("currency-settings");if(a){var e=a.currency||"$",i=a.decimal_separator||".",c=a.thousand_separator||",",r=a.number_decimals||0;switch(t=(t=(t=parseFloat(t).toFixed(parseInt(r))).toString().replace(".",i)).toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g,"$1"+c),a.currency_position){case"left":t=e+t;break;case"left_space":t=e+" "+t;break;case"right":t+=e;break;case"right_space":t=t+" "+e;break;default:t=e+t}return t}},cart_discount:function(){function i(t){for(var a,e=_('.cart_detail input[name="cart-data"]').data("sid"),i=_('.cart_detail input[name="cart-data"]').data("rid"),c=0,r=_('.cart_detail input[name="cart-data"]').data("tax-fee"),o=_('.cart_detail input[name="cart-data"]').data("tax-type"),r=r||0,n=_('.cart_detail input[name="cart-data"]').data("ticket-fee"),d=_('.cart_detail input[name="cart-data"]').data("ticket-fee-type"),n=n||0,s=_(".cart_detail .wp-seat-info").children("span").length,l=JSON.parse(localStorage.getItem(e+"_"+i)),p=[],m=0;m<l.length;m++)-1==_.inArray(l[m].id,p)&&(c+=f.cart_price_incl_tax(parseFloat(l[m].price)),p.push(l[m].id));t?(e=(a=JSON.parse(t)).type,i=a.value,t=a.code,a=0,i=i||0,"percent"==e&&(c-=a=parseFloat(i)*c/100),"amount"==e&&(c-=a=parseFloat(i)),_(".cart_detail .cart-sidebar .discount-number").empty().html("-"+f.cart_total(a)),_(".cart_detail .cart-sidebar .discount-number").attr("data-discount",a),_(".cart_detail .cart-sidebar .discount-number").attr("data-discount-code",t),_(".cart_detail .cart-sidebar .total-discount").css("display","flex")):(_(".cart_detail .cart-sidebar .discount-number").empty(),_(".cart_detail .cart-sidebar .discount-number").attr("data-discount",0),_(".cart_detail .cart-sidebar .discount-number").attr("data-discount-code",""),_(".cart_detail .cart-sidebar .total-discount").hide());let u=0;r&&("percent"===o&&(u=parseFloat(r)*c/100),"amount"===o&&(u=parseFloat(r))),_(".cart_detail .cart-sidebar .tax-number").empty().html("+"+f.cart_total(u)),_(".cart_detail .cart-sidebar .tax-number").attr("data-tax",u);let b=0;Array.isArray(l)&&l.length&&n&&("percent"===d&&(b=parseFloat(n)*c/100),"amount"===d&&(b=parseFloat(n))),b*=s,_(".cart_detail .cart-sidebar .ticket-fee-number").empty().html("+"+f.cart_total(b)),_(".cart_detail .cart-sidebar .ticket-fee-number").attr("data-ticket-fee",b),Array.isArray(l)&&l.length?(_(".cart_detail .cart-sidebar .total-price").html(f.cart_total(c+u+b)),_(".cart_detail .cart-sidebar .total-cart-info").attr("data-total",c+u+b)):(_(".cart_detail .cart-sidebar .total-price").html(f.cart_total(0)),_(".cart_detail .cart-sidebar .total-cart-info").attr("data-total",0))}_(".cart_detail .cart-sidebar .cart-discount .cart-discount-btn").on("click",function(t){t.preventDefault();t=_(this);t.hide(),t.closest(".cart-discount").find(".form-discount").css("display","flex"),t.closest(".cart-discount").find(".form-discount .input-discount-code input.discount-code").val("")}),_(".cart_detail .cart-sidebar .cart-discount .form-discount i").on("click",function(t){t.preventDefault(),_(this).closest(".cart-discount").find(".form-discount").hide(),_(this).closest(".cart-discount").find(".cart-discount-btn").show(),_(this).closest(".form-discount").find(".input-discount-code i").hide(),_(this).closest(".form-discount").find(".error").hide(),_(this).closest(".form-discount").find(".input-discount-code input.discount-code").val(""),i(!1)}),_(".cart_detail .cart-sidebar .cart-discount .form-discount .cart-discount-submit-code").on("click",function(t){t.preventDefault();var a=_(this),e=a.closest(".form-discount").find(".input-discount-code input.discount-code").val(),t=a.data("movie-id");a.closest(".form-discount").find(".input-discount-code i").show(),a.closest(".form-discount").find(".error").hide(),_.post(ajax_object.ajax_url,{action:"mb_check_discount",data:{ajax_nonce:ajax_object.ajax_nonce,discountCode:e,movieID:t}},function(t){t||a.closest(".form-discount").find(".error").show(),i(t),a.closest(".form-discount").find(".input-discount-code i").hide()})})},cart_price_incl_tax:function(t){var a=t,e=_('.cart_detail input[name="cart-data"]').data("tax-fee"),i=_('.cart_detail input[name="cart-data"]').data("tax-type"),c=_('.cart_detail input[name="cart-data"]').data("tax-incl");return e&&"yes"==c&&("percent"===i&&(c=1+parseFloat(e)/100,a=t-parseFloat(e)/100/c*t),"amount"===i&&(a=t-parseFloat(e))),a},cart_next:function(){_(".cart_detail .cart-sidebar #mb-btn-checkout").on("click",function(t){t.preventDefault();var a=_(this);if(a.hasClass("mb-disable"))return!1;var e,i,c,r,o,n,d,s,l,p=_(".cart_detail .cart-sidebar .wp-content-item .item-info.item-info-map").data("qty");p?(e=_(".cart_detail .cart-sidebar .wp-content-item .item-info.item-info-map").data("price"),i=a.find("#mb_checkout_nonce").val(),a.find(".submit-load-more").css("z-index",1),c=_('.cart_detail input[name="cart-data"]').data("sid"),r=_('.cart_detail input[name="cart-data"]').data("rid"),o="",o=localStorage.getItem(c+"_"+r),o=JSON.parse(o),n=_(".cart_detail .cart-sidebar .content-cart-info .total-discount .discount-number").data("discount"),d=_(".cart_detail .cart-sidebar .content-cart-info .total-discount .discount-number").data("discount-code"),s=_(".cart_detail .cart-sidebar .content-cart-info .total-tax .tax-number").data("tax"),l=_(".cart_detail .cart-sidebar .content-cart-info .ticket-fee .ticket-fee-number").data("ticket-fee"),t=_(".cart_detail .cart-sidebar .total-cart-info").data("total"),_.post(ajax_object.ajax_url,{action:"mb_process_checkout",data:{checkout_nonce:i,showtime_id:c,room_id:r,cart:o,qty:p,subtotal:e,discount:n,discount_code:d,tax:s,ticket_fee:l,total:t}},function(t){var a,e;t&&(t=(a=JSON.parse(t)).mb_message,localStorage.removeItem(c+"_"+r),t?(_(".cart_detail .cart-sidebar .cart-error").html(t).css("display","block"),_(".cart_detail .cart-sidebar .cart-checkout").addClass("mb-disable"),_(".cart_detail .cart-sidebar .submit-load-more").css("z-index",-1),e=10,_(".cart_detail .cart-sidebar .message-error").show().find(".mb-auto-reload").html(a.mb_reload),setInterval(function(){e--,_(".cart_detail .cart-sidebar .message-error .mb-auto-reload .time").html(e),0===e&&location.reload()},1e3)):window.location.href=a.url)})):a.closest(".cart-sidebar").find(".cart-error").css("display","block")})},countdown_checkout:function(){0<_(".countdown-checkout").length&&_(".countdown-checkout").each(function(){var t,a,e,i=_(this),c=i.data("time-countdown-checkout"),r=i.data("redirect"),o=i.data("countdown-checkout-nonce"),n=i.data("booking-id"),d=i.data("movie-id"),s=i.data("showtime-id"),l=i.data("room-id"),p=s&&d?s+"_"+l:"";0==c?_.post(ajax_object.ajax_url,{action:"mb_countdown_checkout",data:{checkout_nonce:o,booking_id:n,movie_id:d,showtime_id:s,room_id:l}},function(t){"success"==t&&(localStorage.removeItem(p),window.location.href=r)}):(t=Math.floor(c/60),a=parseInt(c%60),e=setInterval(function(){t=--a<0?--t:t,a=(a=a<0?59:a)<10?"0"+a:a,t=t<10?"0"+t:t,i.find(".time").html(t+":"+a),t=parseInt(t),(a=parseInt(a))<=0&&t<=0&&(clearInterval(e),_.post(ajax_object.ajax_url,{action:"mb_countdown_checkout",data:{checkout_nonce:o,booking_id:n,movie_id:d,showtime_id:s,room_id:l}},function(t){"success"==t&&(localStorage.removeItem(p),window.location.href=r)}))},1e3))})},mb_trailer_video_popup:function(){_(".btn-trailer-video").on("click",function(t){t.preventDefault();var t=_(this).data("movie-id"),a=_(".mb_trailer_video_popup"),e=a.find(".modal-content"),i=a.find(".ovaicon-cancel");_.post(ajax_object.ajax_url,{action:"mb_get_trailer",data:{ajax_nonce:ajax_object.ajax_nonce,movie_id:t}},function(t){e.html("").append(t),a.css("display","flex"),i.on("click",function(){a.hide(),e.html("")}),_(window).click(function(t){"mb_trailer_video_popup"==t.target.className&&(a.hide(),e.html(""))})})})},mb_trailer_video_popup_for_slick:function(){_(".mb-movie-trailer-slider").on("click",".btn-trailer-video",function(t){t.preventDefault();var t=_(this).data("movie-id"),a=_(".mb_trailer_video_popup"),e=a.find(".modal-content"),i=a.find(".ovaicon-cancel");_.post(ajax_object.ajax_url,{action:"mb_get_trailer",data:{ajax_nonce:ajax_object.ajax_nonce,movie_id:t}},function(t){e.html("").append(t),a.css("display","flex"),i.on("click",function(){a.hide(),e.html("")}),_(window).click(function(t){"mb_trailer_video_popup"==t.target.className&&(a.hide(),e.html(""))})})})}};_(document).ready(function(){f.init(),window.MB_Frontend=f})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,